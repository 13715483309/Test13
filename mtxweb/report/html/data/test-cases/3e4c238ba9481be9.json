{
  "uid" : "3e4c238ba9481be9",
  "name" : "test_case1[zhang-123456]",
  "fullName" : "case.test_login.Test_Login#test_case1",
  "historyId" : "f7f3b76f220cbd3c30a929f6b4f6e7a0",
  "time" : {
    "start" : 1616036623151,
    "stop" : 1616036635755,
    "duration" : 12604
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'NoneType' object is not callable",
  "statusTrace" : "self = <test_login.Test_Login object at 0x7f8ff9118910>, account = 'zhang', pwd = '123456'\n\n    @pytest.mark.parametrize('account,pwd',[('zhang','123456')])\n    def test_case1(self,account,pwd):\n        self.logobj.login(account,pwd)\n        path = f\"//div[@class='menu-hd']/em[contains(text(),{account})]\"\n        # assert self.logobj.mtx_find_xpath(path)\n        if pytest.assume(self.logobj.mtx_find_xpath(path)):\n>           self.log.logger().info('success')\nE           TypeError: 'NoneType' object is not callable\n\ncase/test_login.py:21: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1616036621221,
      "stop" : 1616036623148,
      "duration" : 1927
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1616036635761,
      "stop" : 1616036635841,
      "duration" : 80
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "case"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "Test_Login"
  }, {
    "name" : "host",
    "value" : "chenjinfeideMacBook-Air.local"
  }, {
    "name" : "thread",
    "value" : "80007-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "account",
    "value" : "'zhang'"
  }, {
    "name" : "pwd",
    "value" : "'123456'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "40545219713d423c",
      "status" : "passed",
      "time" : {
        "start" : 1615858455551,
        "stop" : 1615858463861,
        "duration" : 8310
      }
    }, {
      "uid" : "6904ce1fe2f027e",
      "status" : "passed",
      "time" : {
        "start" : 1615772698305,
        "stop" : 1615772706707,
        "duration" : 8402
      }
    }, {
      "uid" : "23d8119457a3d39e",
      "status" : "broken",
      "statusDetails" : "TypeError: __init__() missing 1 required positional argument: 'dev'",
      "time" : {
        "start" : 1615772294275,
        "stop" : 1615772294275,
        "duration" : 0
      }
    }, {
      "uid" : "11b7b37585f0f0cb",
      "status" : "broken",
      "statusDetails" : "TypeError: __init__() missing 1 required positional argument: 'dev'",
      "time" : {
        "start" : 1615772219046,
        "stop" : 1615772219046,
        "duration" : 0
      }
    }, {
      "uid" : "af3cc0f972adb2ca",
      "status" : "passed",
      "time" : {
        "start" : 1615300781526,
        "stop" : 1615300791739,
        "duration" : 10213
      }
    }, {
      "uid" : "2820845d656e39eb",
      "status" : "passed",
      "time" : {
        "start" : 1614910255562,
        "stop" : 1614910263604,
        "duration" : 8042
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3e4c238ba9481be9.json",
  "parameterValues" : [ "'zhang'", "'123456'" ]
}