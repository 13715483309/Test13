{"name": "test_case_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_address.Test_Address object at 0x7fe16d6ada30>\n\n    def test_case_1(self):\n>       name = self.adrobj.address()\n\ncase/test_address.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage/Mtx_Address.py:32: in address\n    self.mtx_find_xpath(self.myaddre).click()\npage/Base_Page.py:18: in mtx_find_xpath\n    ele = WebDriverWait(self.dev,10,0.5).until(lambda x:x.find_element_by_xpath(path))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fe9b30c721ecc5f2de8b4c97e276d92f\")>\nmethod = <function Base_Page.mtx_find_xpath.<locals>.<lambda> at 0x7fe16d724ee0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../opt/anaconda3/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "start": 1616641082325, "stop": 1616641104629, "uuid": "7ce0ca5b-c25c-4023-8230-8d91c8af4db2", "historyId": "3454b25487d38c25782d96a37fe80a3c", "testCaseId": "c66f2cd2c880260a525b082b40e1e416", "fullName": "case.test_address.Test_Address#test_case_1", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_address"}, {"name": "subSuite", "value": "Test_Address"}, {"name": "host", "value": "chenjinfeideMacBook-Air.local"}, {"name": "thread", "value": "19425-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_address"}]}